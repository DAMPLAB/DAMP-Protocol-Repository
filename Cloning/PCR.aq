{"config":{"title":"PCR","description":"No description given","copyright":"No copyright declared","version":"no version info","authors":[],"maintainer":{"name":"No maintainer","email":"noone@nowehere"},"acknowledgements":[],"github":{"repo":"none","user":"none","access_token":"none"},"keywords":[],"aquadoc_version":"1.0.0"},"components":[{"sample_types":[{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00","field_types":[{"id":1,"parent_id":1,"name":"Overhang Sequence","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2,"parent_id":1,"name":"Anneal Sequence","ftype":"string","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":3,"parent_id":1,"name":"T Anneal","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2207,"parent_id":1,"name":"URL","ftype":"url","choices":null,"array":false,"required":false,"created_at":"2017-07-24T14:21:24.000-07:00","updated_at":"2017-07-24T14:21:24.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]},{"id":2,"name":"Plasmid","description":"A circular piece of double stranded DNA","created_at":"2013-10-15T09:59:25.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00","field_types":[{"id":4,"parent_id":2,"name":"Sequence","ftype":"url","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:30:08.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":5,"parent_id":2,"name":"Sequence Verification","ftype":"url","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:16:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":6,"parent_id":2,"name":"Bacterial Marker 1","ftype":"string","choices":"Amp, Cam, Carb, Kan, Spec, Strep, Other, N/A","array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2020-03-05T14:47:09.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":7,"parent_id":2,"name":"Yeast Marker","ftype":"string","choices":"HIS, TRP, URA, LEU, NatMX, KanMX, HygMX, BleoMX ,5FOA, N/A, Other","array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2017-07-24T14:23:40.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":8,"parent_id":2,"name":"Length","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:16:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":42,"parent_id":2,"name":"Sequencing Primers","ftype":"sample","choices":null,"array":true,"required":false,"created_at":"2016-05-09T21:30:48.000-07:00","updated_at":"2016-05-09T21:30:48.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":26,"field_type_id":42,"sample_type_id":1,"object_type_id":null,"created_at":"2016-05-09T21:30:48.000-07:00","updated_at":"2016-05-09T21:30:48.000-07:00","sample_type":{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00"}}],"sample_types":["Primer"],"object_types":[null]},{"id":2246,"parent_id":2,"name":"Alias","ftype":"string","choices":"Promoter, CDS, Terminator, Backbone, RBS, Marker, Insulator, Reporter Plasmid, Gate, Circuit w/ Reporter Plasmid, Other, N/A","array":false,"required":false,"created_at":"2017-08-28T09:14:15.000-07:00","updated_at":"2020-03-05T14:51:23.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":10458,"parent_id":2,"name":"Bacterial Marker 2","ftype":"string","choices":"Amp, Cam, Carb, Kan, Spec, Strep, Other, N/A","array":false,"required":true,"created_at":"2020-03-05T14:47:09.000-08:00","updated_at":"2020-03-05T14:47:57.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]},{"id":4,"name":"Fragment","description":"A linear double stranded piece of DNA from PCR or Restriction Digest","created_at":"2013-10-16T14:33:41.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00","field_types":[{"id":11,"parent_id":4,"name":"Sequence","ftype":"url","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2018-02-16T23:49:44.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":12,"parent_id":4,"name":"Length","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:17:39.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":13,"parent_id":4,"name":"Template","ftype":"sample","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-12T19:07:59.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":2,"field_type_id":13,"sample_type_id":2,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":2,"name":"Plasmid","description":"A circular piece of double stranded DNA","created_at":"2013-10-15T09:59:25.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00"}},{"id":3,"field_type_id":13,"sample_type_id":3,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":3,"name":"E. coli strain","description":"A strain of E. coli distinguished from others by genomic (not plasmid) modifications.","created_at":"2013-10-15T10:16:52.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00"}},{"id":4,"field_type_id":13,"sample_type_id":4,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":4,"name":"Fragment","description":"A linear double stranded piece of DNA from PCR or Restriction Digest","created_at":"2013-10-16T14:33:41.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00"}}],"sample_types":["Plasmid","E. coli strain","Fragment"],"object_types":[null,null,null]},{"id":14,"parent_id":4,"name":"Forward Primer","ftype":"sample","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-12T19:07:59.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":6,"field_type_id":14,"sample_type_id":1,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00"}}],"sample_types":["Primer"],"object_types":[null]},{"id":15,"parent_id":4,"name":"Reverse Primer","ftype":"sample","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-12T19:07:59.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":7,"field_type_id":15,"sample_type_id":1,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00"}}],"sample_types":["Primer"],"object_types":[null]},{"id":6036,"parent_id":4,"name":"Raw Sequence","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2018-02-16T23:48:20.000-08:00","updated_at":"2018-02-16T23:48:20.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]},{"id":3,"name":"E. coli strain","description":"A strain of E. coli distinguished from others by genomic (not plasmid) modifications.","created_at":"2013-10-15T10:16:52.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00","field_types":[{"id":10,"parent_id":3,"name":"Parent","ftype":"sample","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":1,"field_type_id":10,"sample_type_id":3,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":3,"name":"E. coli strain","description":"A strain of E. coli distinguished from others by genomic (not plasmid) modifications.","created_at":"2013-10-15T10:16:52.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00"}}],"sample_types":["E. coli strain"],"object_types":[null]}]}],"object_types":[{"id":322,"name":"Primer Stock","description":"Rehydrated primer in tube from IDT - 100uM","min":0,"max":1,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"min_conc\": 0.000010, \"rec_conc\": 0.000025, \"max_vol\": 1500, \"conc_callback\": \"manually_enter_uM_conc\", \"short_description\":\"1.5 mL tube\", \"opentrons_labware\": \"24-well-1.5ml-rack\"}","vendor":"No vendor information","created_at":"2014-01-22T16:56:36.000-08:00","updated_at":"2018-09-04T19:56:25.000-07:00","unit":"Base","cost":0.26,"release_method":"return","release_description":"","sample_type_id":1,"image":"","prefix":"M20O","rows":null,"columns":null,"sample_type_name":"Primer"},{"id":571,"name":"Plasmid Stock","description":"A plasmid stock that has yet to be sequenced verified","min":0,"max":1,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"min_conc\": 0.000000005, \"rec_conc\": 0.000000025, \"max_vol\": 1500, \"conc_callback\": \"nanodrop_dsdna\", \"short_description\":\"1.5 mL tube\", \"opentrons_labware\": \"24-well-1.5ml-rack\"}","vendor":"No vendor information","created_at":"2017-03-31T15:34:41.000-07:00","updated_at":"2018-09-19T18:46:08.000-07:00","unit":"Plasmid","cost":0.01,"release_method":"return","release_description":"","sample_type_id":2,"image":"","prefix":"M20P","rows":null,"columns":null,"sample_type_name":"Plasmid"},{"id":295,"name":"Fragment Stock","description":"Fragment stock in 1.5 mL tube, usually stored in M20 fridge.","min":0,"max":1000,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"min_conc\": 0.000000005, \"rec_conc\": 0.000000025, \"max_vol\": 1500, \"conc_callback\": \"nanodrop_dsdna\", \"short_description\":\"1.5 mL tube\", \"opentrons_labware\": \"24-well-1.5ml-rack\"}","vendor":"No vendor information","created_at":"2014-01-12T16:12:01.000-08:00","updated_at":"2018-09-19T18:46:35.000-07:00","unit":"Fragment","cost":50.0,"release_method":"return","release_description":"","sample_type_id":4,"image":"","prefix":"M20P","rows":null,"columns":null,"sample_type_name":"Fragment"},{"id":366,"name":"Small LB Overnight Culture","description":"An overnight of E. coli transformed with a plasmid in LB + antibiotic","min":0,"max":1,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{\"max_vol\": 10000, \"short_description\":\"15 mL tube\"}","vendor":"No vendor information","created_at":"2014-02-25T17:07:26.000-08:00","updated_at":"2018-02-27T14:57:26.000-08:00","unit":"Plasmid","cost":0.01,"release_method":"dispose","release_description":"","sample_type_id":2,"image":"","prefix":"Shaker","rows":null,"columns":null,"sample_type_name":"Plasmid"},{"id":290,"name":"PCR Result","description":"PCR results that contain the fragment we aim to amplify out.","min":0,"max":1000,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"max_vol\": 100, \"short_description\":\"PCR tube\"}","vendor":"No vendor information","created_at":"2014-01-10T02:39:29.000-08:00","updated_at":"2018-02-10T17:30:38.000-08:00","unit":"Fragment","cost":5.0,"release_method":"query","release_description":"Dispose if there is less than 5 ?L.","sample_type_id":4,"image":"","prefix":"M20SRX","rows":null,"columns":null,"sample_type_name":"Fragment"}],"operation_type":{"name":"PCR","category":"Cloning","deployed":false,"on_the_fly":false,"field_types":[{"ftype":"sample","role":"input","name":"Forward Primer","sample_types":["Primer"],"object_types":["Primer Stock"],"part":false,"array":false,"routing":"FP","preferred_operation_type_id":481,"preferred_field_type_id":5600,"choices":null},{"ftype":"sample","role":"input","name":"Reverse Primer","sample_types":["Primer"],"object_types":["Primer Stock"],"part":false,"array":false,"routing":"RP","preferred_operation_type_id":481,"preferred_field_type_id":5600,"choices":null},{"ftype":"sample","role":"input","name":"Template","sample_types":["Plasmid","Fragment","Plasmid"],"object_types":["Plasmid Stock","Fragment Stock","Small LB Overnight Culture"],"part":false,"array":false,"routing":"P","preferred_operation_type_id":483,"preferred_field_type_id":5604,"choices":null},{"ftype":"sample","role":"output","name":"PCR Product","sample_types":["Fragment"],"object_types":["PCR Result"],"part":false,"array":false,"routing":"F","preferred_operation_type_id":null,"preferred_field_type_id":null,"choices":null}],"protocol":"needs \"Standard Libs/Debug Lib\"\r\nneeds \"Cloning Libs/Cloning\"\r\nclass Protocol\r\n\tinclude Debug\r\n\tinclude Cloning\r\n\t# I/O\r\n\tFWD = \"Forward Primer\"\r\n\tREV = \"Reverse Primer\"\r\n\tTEMPLATE = \"Template\"\r\n\tFRAGMENT = \"PCR Product\"\r\n    \r\n    REACTION_VOLUME = 50.0\r\n\tTOTAL_THERMOCYCLERS = 1\r\n\tANNEAL_TEMP_TOLERANCE = 1.0 # Reactions where the difference in annealing temp is less than this value may be run together\r\n    \r\n\tBLOCKS_PER_THERMOCYCLER = 3\r\n\tZONES_PER_BLOCK = 2\r\n\tREACTIONS_PER_ZONE = 16\r\n\t\r\n\tdef main\r\n        current_taken_items = []\r\n        # Remember to add volume information to input and output object types (and concentration data where applicable).\r\n        # Two different input volumes to avoid pipetting .5 ul of Q5 when only 1 operation in batch\r\n        if operations.count == 1\r\n            input_volumes = {FWD =\u003e (REACTION_VOLUME / 50.0).round(2), REV =\u003e (REACTION_VOLUME / 50.0).round(2), TEMPLATE =\u003e (REACTION_VOLUME / 50.0).round(2), \"Buffer\" =\u003e (REACTION_VOLUME*0.33).round(2), \"dntp\" =\u003e (REACTION_VOLUME*0.022).round(2), \"Q5\" =\u003e (REACTION_VOLUME*0.022).round(2)}\r\n        else\r\n            input_volumes = {FWD =\u003e (REACTION_VOLUME / 50.0).round(2), REV =\u003e (REACTION_VOLUME / 50.0).round(2), TEMPLATE =\u003e (REACTION_VOLUME / 50.0).round(2), \"Buffer\" =\u003e (REACTION_VOLUME*0.22).round(2), \"dntp\" =\u003e (REACTION_VOLUME*0.022).round(2), \"Q5\" =\u003e (REACTION_VOLUME*0.011).round(2)}\r\n        end\r\n        output_volumes = {FRAGMENT =\u003e (REACTION_VOLUME*0.95 - 2.0).round}\r\n        \r\n        operations.running.add_static_inputs \"Q5\", \"Q5 HF DNA Polymerase\", \"Enzyme Stock\"\r\n\t\toperations.running.add_static_inputs \"Buffer\", \"Q5 Reaction Buffer\", \"Enzyme Buffer Stock\"\r\n\t\toperations.running.add_static_inputs \"dntp\", \"10mM dNTP\", \"Screw Cap Tube Stock\"\r\n\t\tcheck_user_inputs [FWD, REV, TEMPLATE], input_volumes, current_taken_items\r\n        assign_input_items [\"Buffer\", \"dntp\", \"Q5\"], input_volumes, current_taken_items\r\n        return {} if check_for_errors\r\n        robust_make [FRAGMENT], current_taken_items\r\n        \r\n\t\toperations.each do |op|\r\n\t\t\tt1 = op.input(FWD).sample.properties[\"T Anneal\"]\r\n\t\t\tt2 = op.input(REV).sample.properties[\"T Anneal\"]\r\n\t\t\top.temporary[:tanneal] = [t1, t2].min\r\n\t\tend\r\n\t\toperations.sort_by! {|op| op.temporary[:tanneal]}\r\n\r\n\t\t##  Ops can occupy the same zone if they are within 1C of lowest annealing op in the zone AND the \r\n\t\t##  zone is occupied by \u003c 16 ops already. Also, two zones in the same block cannot be more than \r\n\t\t##  5C apart (limitation of veriflex function on PCR machine).\r\n\r\n\t\top_array = Array.new(TOTAL_THERMOCYCLERS*BLOCKS_PER_THERMOCYCLER) {Array.new(ZONES_PER_BLOCK) {Array.new}} \r\n\t\tblock = 0\r\n\t\tzone_in_block = 0\r\n\t\treaction_in_zone = 0\r\n\t\tzone_tanneal = 0\r\n\t\toperations.running.each_with_index do |op, i|\r\n\t\t    if i == 0\r\n\t\t        zone_tanneal = op.temporary[:tanneal]\r\n\t\t    elsif (reaction_in_zone \u003e= REACTIONS_PER_ZONE) || (op.temporary[:tanneal] - zone_tanneal \u003e ANNEAL_TEMP_TOLERANCE) #new zone\r\n\t\t        zone_in_block += 1\r\n\t\t        reaction_in_zone = 0\r\n\t\t        if (zone_in_block \u003e= ZONES_PER_BLOCK) || (op.temporary[:tanneal] - zone_tanneal \u003e 5.0)#new block\r\n\t\t            block += 1\r\n\t\t            zone_in_block = 0\r\n\t\t        end\r\n\t\t        zone_tanneal = op.temporary[:tanneal]\r\n\t\t    end\r\n\t\t    if not op_array[block].blank? #prevents scheduling of more blocks than total capacity of the lab\r\n\t\t        op_array[block][zone_in_block] \u003c\u003c op\r\n\t\t    else\r\n\t\t        show do\r\n\t\t            title \"Number of reactions scheduled exceeds total thermocycler capacity of lab.\"\r\n\t\t            note \"Number of reactions scheduled exceeds total thermocycler capacity of lab.\"\r\n\t\t            warning \"Aborting protocol. Please check with the lab manager for further instructions.\"\r\n\t\t        end\r\n\t\t        return {}\r\n\t\t    end\r\n\t\t    reaction_in_zone += 1\r\n\t\tend\r\n\t\tblocks_required = block + 1\r\n\t\top_array.map! {|block| block.reject {|zone| zone.empty?}}\r\n\t\top_array.reject! {|block| block.empty?}\r\n\t\top_array.compact!\r\n    \r\n\t\tdata = show do\r\n\t\t    title \"Check if enough blocks are available\"\r\n\t\t    warning \"Warning: Selecting \\\"No\\\" will abort the protocol.\"\r\n\t\t    select [ \"Yes\", \"No\"], var: \"choice\", label: \"Are there at least #{blocks_required} blocks currently available on the pcr machine?\", default: 0\r\n\t\tend\r\n\r\n\t\tif data[:choice] == \"No\"\r\n\t\t    show do\r\n                title \"Number of reactions scheduled exceeds available capacity.\"\r\n\t            note \"Number of reactions scheduled exceeds available capacity.\"\r\n\t\t        warning \"Aborting protocol. Please check with the lab manager for further instructions.\"\r\n            end\r\n\t\t    return {}\r\n\t\tend\r\n\r\n\t\tshow do\r\n\t\t    title \"Keep all items on ice\"\r\n\t\t    warning \"Note: All items used in this protocol should be kept on ice (or thawed at room temperature then immediately transfered to ice).\"\r\n\t\tend\r\n        \r\n        #creating master mixes\r\n        mm_buffer_vol_by_item = {}\r\n        dp_buffer_vol_by_item = {}\r\n        mm_dntp_vol_by_item = {}\r\n        dp_q5_vol_by_item = {}\r\n        if operations.running.count == 1 #special case to prevent pipetting .5 ul of q5\r\n            mm_to_make = ((REACTION_VOLUME-input_volumes[FWD]-input_volumes[REV]-input_volumes[TEMPLATE])/2.0)*1.1\r\n            dp_to_make = (REACTION_VOLUME-input_volumes[FWD]-input_volumes[REV]-input_volumes[TEMPLATE])*1.1\r\n            water_for_mm = (mm_to_make - operations.running.count*input_volumes[\"Buffer\"] / 3.0 - operations.running.count*input_volumes[\"dntp\"]).round(2)\r\n            water_for_dp = (dp_to_make - (2.0*input_volumes[\"Buffer\"] / 3.0) - input_volumes[\"Q5\"]).round(2)\r\n            mm_buffer_vol_by_item = {operations.running[0].input(\"Buffer\").item =\u003e input_volumes[\"Buffer\"]/3.0}\r\n            dp_buffer_vol_by_item = {operations.running[0].input(\"Buffer\").item =\u003e 2.0*input_volumes[\"Buffer\"]/3.0}\r\n        else\r\n            mm_to_make = operations.running.count*((REACTION_VOLUME-input_volumes[FWD]-input_volumes[REV]-input_volumes[TEMPLATE])/2.0)*1.1\r\n            dp_to_make = operations.running.count*((REACTION_VOLUME-input_volumes[FWD]-input_volumes[REV]-input_volumes[TEMPLATE])/2.0)*1.1\r\n            water_for_mm = (mm_to_make - operations.running.count*input_volumes[\"Buffer\"] / 2.0 - operations.running.count*input_volumes[\"dntp\"]).round(2)\r\n            water_for_dp = (dp_to_make - operations.running.count*input_volumes[\"Buffer\"] / 2.0 - operations.running.count*input_volumes[\"Q5\"]).round(2)\r\n            operations.running.each do |op|\r\n                if mm_buffer_vol_by_item.keys.include? op.input(\"Buffer\").item\r\n                    mm_buffer_vol_by_item[op.input(\"Buffer\").item] += input_volumes[\"Buffer\"]/2.0\r\n                else\r\n                    mm_buffer_vol_by_item[op.input(\"Buffer\").item] = input_volumes[\"Buffer\"]/2.0\r\n                end\r\n                if dp_buffer_vol_by_item.keys.include? op.input(\"Buffer\").item\r\n                    dp_buffer_vol_by_item[op.input(\"Buffer\").item] += input_volumes[\"Buffer\"]/2.0\r\n                else\r\n                    dp_buffer_vol_by_item[op.input(\"Buffer\").item] = input_volumes[\"Buffer\"]/2.0\r\n                end\r\n            end\r\n        end\r\n        operations.running.each do |op|\r\n            if mm_dntp_vol_by_item.keys.include? op.input(\"dntp\").item\r\n                mm_dntp_vol_by_item[op.input(\"dntp\").item] += input_volumes[\"dntp\"]\r\n            else\r\n                mm_dntp_vol_by_item[op.input(\"dntp\").item] = input_volumes[\"dntp\"]\r\n            end\r\n            if dp_q5_vol_by_item.keys.include? op.input(\"Q5\").item\r\n                dp_q5_vol_by_item[op.input(\"Q5\").item] += input_volumes[\"Q5\"]\r\n            else\r\n                dp_q5_vol_by_item[op.input(\"Q5\").item] = input_volumes[\"Q5\"]\r\n            end\r\n        end\r\n        \r\n        \r\n        ot2_choice = show do\r\n            title \"Select execution method\"\r\n            select [\"No\", \"Yes\"], var: \"ot2\", label: \"Is the OT2 robot available?\"\r\n        end\r\n        \r\n        if ot2_choice[:ot2] == \"Yes\"\r\n\r\n            prot = OTAqProtocol.new\r\n            \r\n            prot.add_labware_definition('24-well-1.5ml-rack')\r\n    \r\n            water_container = prot.labware.load('point', '1', 'Water')\r\n            water = prot.dummy_item \"DI Water\"\r\n            prot.assign_wells [water], [water_container.wells(0)]\r\n            \r\n            td = prot.modules.load('tempdeck', '10')\r\n            temp_deck_tubes = prot.labware.load('PCR-strip-tall', '10', 'Temp deck w/ PCR tubes')\r\n            \r\n            # p10 = prot.instruments.P10_Single(mount: 'right', tip_model: \"tiprack-10ul\")\r\n            tip_racks_small = []\r\n            tip_racks_small \u003c\u003c prot.labware.load('tiprack-10ul', '3')\r\n            tip_racks_small \u003c\u003c prot.labware.load('tiprack-10ul', '6')\r\n            tip_racks_large = [prot.labware.load('tiprack-200ul', '9')]\r\n            p10 = prot.instruments.P10_Single(mount: 'right', tip_racks: tip_racks_small)\r\n            p300 = prot.instruments.P300_Single(mount: 'left', tip_racks: tip_racks_large)\r\n            \r\n            prot.assign_wells operations.running.map{|op| op.output(FRAGMENT).item}, temp_deck_tubes.wells[0..operations.running.count-1]\r\n            operations.running.map{|op| op.temporary[:aliquot_tube] = prot.dummy_item \"Empty Tube\"}\r\n            prot.assign_wells(operations.running.map{|op| op.temporary[:aliquot_tube]}, temp_deck_tubes.wells[operations.running.count..(operations.running.count * 2 - 1)])\r\n            \r\n            prot.assign_wells operations.running.map{|op| op.input(\"Q5\").item}.uniq\r\n            prot.assign_wells operations.running.map{|op| op.input(\"dntp\").item}.uniq\r\n            prot.assign_wells operations.running.map{|op| op.input(\"Buffer\").item}.uniq\r\n            prot.assign_wells operations.running.map{|op| op.input(FWD).item}.uniq\r\n            prot.assign_wells operations.running.map{|op| op.input(REV).item}.uniq\r\n            prot.assign_wells operations.running.map{|op| op.input(TEMPLATE).item}.uniq\r\n            \r\n            td.set_temperature(4)\r\n            \r\n            p300.pick_up_tip\r\n            operations.running.each do |op|\r\n                p300.aspirate(49, prot.find_well(water))\r\n                p300.dispense(49, prot.find_well(op.temporary[:aliquot_tube]).bottom(0))\r\n            end\r\n            p300.drop_tip\r\n            \r\n            operations.running.each do |op|\r\n                p10.pick_up_tip\r\n                p10.aspirate 1, prot.find_well(op.input(TEMPLATE).bottom(0))\r\n                p10.dispense 1, prot.find_well(op.temporary[:aliquot_tube])\r\n                3.times do\r\n                    p10.aspirate 10, prot.find_well(op.input(TEMPLATE).bottom(0))\r\n                    p10.dispense 10, prot.find_well(op.temporary[:aliquot_tube])\r\n                end\r\n                p10.drop_tip\r\n            end\r\n            \r\n            # show do\r\n            #     title \"Combine water, buffer, and dNTPs\"\r\n            #     check \"Label a 1.5 ml epindorf tube \\\"MM\\\" and place it on ice\"\r\n            #     check \"Add reagents to \\\"MM\\\" according to the following chart:\"\r\n            #     table_matrix = Array.new {Array.new}\r\n            #     table_matrix[0] = [\"Water to add\", \"Buffer to add\", \"dNTP to add\"]\r\n            #     table_matrix[1] = [{content: water_for_mm.to_s, check: true} , Array.new, Array.new]\r\n            #     mm_buffer_vol_by_item.each{|item, vol| table_matrix[1][1] \u003c\u003c \"#{vol.round(2)} µl of #{item.id}\"}\r\n            #     mm_dntp_vol_by_item.each{|item, vol| table_matrix[1][2] \u003c\u003c \"#{vol.round(2)} µl of #{item.id}\"}\r\n            #     table_matrix[1][1] = {content: table_matrix[1][1].join(\", \"), check: true} \r\n            #     table_matrix[1][2] = {content: table_matrix[1][2].join(\", \"), check: true} \r\n            #     table table_matrix\r\n            # end\r\n            \r\n            \r\n            \r\n            p10.pick_up_tip\r\n            operations.running.each do |op|\r\n                p10.aspirate(input_volumes[\"Buffer\"], prot.find_well(op.input(\"Buffer\").item).bottom(0))\r\n                p10.dispense(input_volumes[\"Buffer\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                p10.aspirate(input_volumes[\"Buffer\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                p10.dispense(input_volumes[\"Buffer\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            end\r\n            p10.drop_tip\r\n            \r\n            # Add other reagents\r\n            operations.running.each do |op|\r\n                p10.pick_up_tip\r\n                p10.aspirate(input_volumes[\"Vector\"], prot.find_well(op.input(\"Vector\").item).bottom(0))\r\n                p10.dispense(input_volumes[\"Vector\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                p10.drop_tip\r\n                \r\n                op.input_array(\"Insert\").items.each do |insert_item|\r\n                    p10.pick_up_tip\r\n                    p10.aspirate(input_volumes[\"Insert\"], prot.find_well(insert_item).bottom(0))\r\n                    p10.dispense(input_volumes[\"Insert\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                    p10.drop_tip\r\n                end\r\n                \r\n                p10.pick_up_tip\r\n                p10.aspirate(input_volumes[\"Ligase\"], prot.find_well(op.input(\"Ligase\").item).bottom(0))\r\n                p10.dispense(input_volumes[\"Ligase\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                # Small mix to ensure ligase is added.\r\n                p10.aspirate(5, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                p10.dispense(5, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                p10.drop_tip\r\n                \r\n                p10.pick_up_tip\r\n                p10.aspirate(input_volumes[\"MoClo Restriction Enzyme\"], prot.find_well(op.input(\"MoClo Restriction Enzyme\").item).bottom(0))\r\n                p10.dispense(input_volumes[\"MoClo Restriction Enzyme\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                # Final mix\r\n                3.times do\r\n                    p10.aspirate(10, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                    p10.dispense(10, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                end\r\n                p10.drop_tip\r\n            end\r\n            \r\n            td.wait_for_temp\r\n            p10.delay(7200)\r\n            \r\n            td.set_temperature(50)\r\n            p10.delay(400)\r\n            \r\n            td.set_temperature(80)\r\n            p10.delay(600)\r\n            \r\n            td.set_temperature(4)\r\n            \r\n            robust_take_inputs [TEMPLATE, FWD, REV, \"Buffer\", \"dntp\", \"Q5\"], current_taken_items, interactive: true, method: \"boxes\"\r\n            \r\n            show do\r\n                title \"Prepare output PCR tubes.\"\r\n                note \"Get out #{operations.running.count} new PCR tubes and label with the following IDs: #{operations.running.map {|op| op.output(\"MoClo Reaction Product\").item.id}.to_sentence}\"\r\n            end\r\n            \r\n            run_protocol prot\r\n            \r\n            show do\r\n               title \"Set timer for removing inputs\"\r\n               check \"Set a timer for 20 min, after which the robot should be done pipetting and you can remove and store input items (see following slide).\"\r\n               timer initial: { hours: 0, minutes: 20, seconds: 0}\r\n               check \"Do NOT remove the output items (small PCR tubes on temperature block).\"\r\n            end\r\n            \r\n            robust_release_inputs [\"Ligase\", \"MoClo Restriction Enzyme\", \"Vector\", \"Insert\", \"Buffer\"], current_taken_items, interactive: true\r\n            \r\n            show do\r\n                title \"Set timer for storing outputs\"\r\n                check \"Set a timer for 2 hrs, after which the reactions should be done incubating. At this point, you must reset the run to innactivate the temp block, and then store the output items (see following slides).\"\r\n               timer initial: { hours: 2, minutes: 0, seconds: 0}\r\n            end\r\n            \r\n        else\r\n            #dilute templates\r\n            robust_take_inputs [TEMPLATE, FWD, REV], current_taken_items, interactive: true, method: \"boxes\"\r\n            operations.running.each_with_index do |op, i|\r\n                op.temporary[:aliquot_tube] = i+1\r\n            end\r\n            show do\r\n                title \"Create temporary diluted template aliquots\"\r\n                check \"Thaw items #{(operations.running.map{|op| op.input(FWD).item} + operations.running.map{|op| op.input(REV).item}).to_sentence} in 37C incubator while continuing with the protocol.\"\r\n                note \"Get out #{operations.running.count} new 1.5 ml tubes and number them 1-#{operations.running.count}. Add DNA and water according to the following table:\"\r\n                table operations.start_table\r\n        \t    .custom_column(heading: \"New tube number\") { |op| \"#{op.temporary[:aliquot_tube].to_s}\"}\r\n        \t    .custom_column(heading: \"DNA template to add\", checkable: true) { |op| \"#{(op.input(\"Template\").object_type.name == \"Small LB Overnight Culture\") ? \"10\" : \"1\"} µl of #{op.input(\"Template\").item.id}\"}\r\n        \t    .custom_column(heading: \"Water to add\", checkable: true) { |op| \"#{(op.input(\"Template\").object_type.name == \"Small LB Overnight Culture\") ? \"0\" : \"49\"} µl of water\"}\r\n        \t    .end_table\r\n            end\r\n            robust_release_inputs [TEMPLATE], current_taken_items, interactive: true, method: \"boxes\"\r\n            \r\n            robust_take_inputs [\"dntp\", \"Buffer\"], current_taken_items, interactive: true, method: \"boxes\"\r\n            \r\n            show do\r\n                title \"Combine water, buffer, and dNTPs\"\r\n                check \"Label a 1.5 ml epindorf tube \\\"MM\\\" and place it on ice\"\r\n                check \"Add reagents to \\\"MM\\\" according to the following chart:\"\r\n                table_matrix = Array.new {Array.new}\r\n                table_matrix[0] = [\"Water to add\", \"Buffer to add\", \"dNTP to add\"]\r\n                table_matrix[1] = [{content: water_for_mm.to_s, check: true} , Array.new, Array.new]\r\n                mm_buffer_vol_by_item.each{|item, vol| table_matrix[1][1] \u003c\u003c \"#{vol.round(2)} µl of #{item.id}\"}\r\n                mm_dntp_vol_by_item.each{|item, vol| table_matrix[1][2] \u003c\u003c \"#{vol.round(2)} µl of #{item.id}\"}\r\n                table_matrix[1][1] = {content: table_matrix[1][1].join(\", \"), check: true} \r\n                table_matrix[1][2] = {content: table_matrix[1][2].join(\", \"), check: true} \r\n                table table_matrix\r\n            end\r\n            \r\n            robust_release_inputs [\"dntp\"], current_taken_items, interactive: true, method: \"boxes\"\r\n            \r\n            show do\r\n        \t    title \"Add reagents to PCR tubes\"\r\n        \t    note \"Get out #{operations.running.count} new PCR tubes, label and add reagents to PCR tubes according to the following table.\"\r\n        \t    table operations.start_table\r\n        \t    .output_item(FRAGMENT)\r\n        \t    .custom_column(heading: \"Master mix (MM) to add\", checkable: true) { |op| \"#{((REACTION_VOLUME-input_volumes[FWD]-input_volumes[REV]-input_volumes[TEMPLATE]) / 2.0).round(2)} µl of MM\"}\r\n        \t    .custom_column(heading: \"Template tube # to add\", checkable: true) { |op| \"#{input_volumes[TEMPLATE].round(2)} µl of of tube ##{op.temporary[:aliquot_tube]}\"}\r\n        \t    .custom_column(heading: \"Forward Primer to add\", checkable: true) { |op| \"#{input_volumes[FWD].round(2)} µl of #{op.input(\"Forward Primer\").item.id}\"}\r\n        \t    .custom_column(heading: \"Reverse Primer to add\", checkable: true) { |op| \"#{input_volumes[REV].round(2)} µl of #{op.input(\"Reverse Primer\").item.id}\"}\r\n        \t    .end_table\r\n        \t    check \"Discard the diluted template tubes numbered 1-#{operations.running.count}\"\r\n        \tend\r\n            \r\n            robust_release_inputs [FWD, REV], current_taken_items, interactive: true, method: \"boxes\"\r\n            \r\n            robust_take_inputs [\"Q5\"], current_taken_items, interactive: true, method: \"boxes\"\r\n            \r\n            show do\r\n                title \"Dilute Q5\"\r\n                check \"Label a 1.5 ml epindorf tube \\\"DP\\\" and place it on ice\"\r\n                check \"Add reagents to \\\"DP\\\" according to the following chart:\"\r\n                table_matrix = Array.new {Array.new}\r\n                table_matrix[0] = [\"Water to add\", \"Buffer to add\", \"Q5 to add\"]\r\n                table_matrix[1] = [{content: water_for_dp.to_s, check: true} , Array.new, Array.new]\r\n                dp_buffer_vol_by_item.each{|item, vol| table_matrix[1][1] \u003c\u003c \"#{vol.round(2)} µl of #{item.id}\"}\r\n                dp_q5_vol_by_item.each{|item, vol| table_matrix[1][2] \u003c\u003c \"#{vol.round(2)} µl of #{item.id}\"}\r\n                table_matrix[1][1] = {content: table_matrix[1][1].join(\", \"), check: true} \r\n                table_matrix[1][2] = {content: table_matrix[1][2].join(\", \"), check: true} \r\n                table table_matrix\r\n            end\r\n            \r\n            robust_release_inputs [\"Q5\", \"Buffer\"], current_taken_items, interactive: true, method: \"boxes\"\r\n        \r\n        \tshow do\r\n        \t    title \"Add Diluted Q5 polymerase to PCR tubes\"\r\n        \t    note \"Add diluted Q5 polymerase to PCR tubes according to the following table\"\r\n        \t    warning \"Be sure to manully add note 'Q5' to all the new PCR samples in Aquarium\"\r\n        \t    table operations.start_table\r\n        \t    .output_item(FRAGMENT)\r\n        \t    .custom_column(heading: \"Diluted Q5 (DP) to add\", checkable: true) { |op| \"#{((REACTION_VOLUME-input_volumes[FWD]-input_volumes[REV]-input_volumes[TEMPLATE]) / 2.0).round(2)} µl of DP\"}\r\n        \t    .end_table\r\n        \tend\r\n        \t\r\n\t\tend\r\n\r\n\t\tall_block_names = []\r\n\t\tTOTAL_THERMOCYCLERS.times do |tc_number|\r\n\t\t    BLOCKS_PER_THERMOCYCLER.times do |block_number|\r\n\t\t        all_block_names \u003c\u003c \"Thermocycler \" + (tc_number+1).to_s + \", Block \" + (block_number+1).to_s\r\n\t\t    end\r\n\t\tend\r\n\r\n\t\tchosen_block_names = []\r\n\t    data = show {\r\n\t        title \"Select blocks of thermocycler\"\r\n\t        if blocks_required \u003e 1\r\n\t            note \"Select #{blocks_required} different thermocycler blocks (confirm they are available on the machine before selecting).\"\r\n\t        else\r\n\t            note \"Select the thermocycler block you would like to use (confirm it is available on the machine before selecting).\"\r\n\t        end\r\n\t        blocks_required.times do |i|\r\n                select all_block_names, var: \"choice#{i}\", label: \"Block #\", multiple: true, default: i\r\n            end\r\n        }\r\n        blocks_required.times do |i|\r\n            chosen_block_names \u003c\u003c data[\"choice#{i}\".to_sym]\r\n        end\r\n        log_info \"chosen_block_names\", chosen_block_names\r\n\t\t\r\n\t\t########### Old code that uses a multi-select input instead of multiple single select inputs, should switch back to this if klavins lab ever fixes... ###########\r\n\t\t#chosen_block_names = []\r\n\t\t#if debug\r\n\t\t#    chosen_block_names = all_block_names[0..(blocks_required-1)]\r\n\t\t#else\r\n\t\t#    first_try = true\r\n\t\t#    while chosen_block_names.length != blocks_required\r\n\t\t#        data = show {\r\n\t\t#            title \"Select blocks of thermocycler\"\r\n\t\t#            warning \"Wrong number of blocks selected.\" if not first_try\r\n\t\t#            note \"Please select the #{blocks_required} thermocycler block(s) you would like to use.\"\r\n\t\t#            note \"(use ctrl click to select multiple)\"\r\n\t\t#            select all_block_names, var: \"choice\", label: \"Block(s) #\", multiple: true, default: (0..(blocks_required-1)).to_a\r\n\t\t#            }\r\n\t\t#        chosen_block_names = Array(data[:choice])\r\n\t\t#        first_try = false\r\n\t\t#    end\r\n\t\t#end\r\n\r\n\t\top_array.each do |zones_in_block|\r\n\t\t    block_name = chosen_block_names[0]\r\n\t\t    lengths = zones_in_block.flatten.map {|op| op.output(FRAGMENT).sample.properties[\"Length\"]}\r\n\t\t    extension_time_seconds = [(lengths.max)/1000.0*30, 30.0].max\r\n\t\t    extension_time_seconds = extension_time_seconds.ceil\r\n\t\t    extension_time_minutes = 0\r\n\t\t    while extension_time_seconds \u003e= 60\r\n\t\t        extension_time_seconds -= 60\r\n\t\t        extension_time_minutes += 1\r\n\t\t    end\r\n\t\t    table_matrix = Array.new {Array.new}\r\n\t\t    table_matrix[0] = [\"Zone in #{block_name}\", \"PCR Result Item IDs\" ]\r\n\t\t    table_matrix[1] = [\"Zone 1\", []]\r\n\t\t    table_matrix[2] = [\"Zone 2\", []]\r\n\t\t    zone_1_tanneal = 0\r\n\t\t    zone_2_tanneal = 0\r\n\t\t    zones_in_block.each_with_index do |ops_in_zone, zone_index|\r\n\t\t        if zone_index == 0\r\n\t\t            zone_1_tanneal = ops_in_zone[0].temporary[:tanneal]\r\n\t\t            zone_2_tanneal = ops_in_zone[0].temporary[:tanneal]\r\n\t\t        elsif ops_in_zone.any? #if there is nothing in zone 2, leave zone 2 tanneal same as zone 1 tanneal\r\n\t\t            zone_2_tanneal = ops_in_zone[0].temporary[:tanneal]\r\n\t\t        end\r\n\t\t        ops_in_zone.each do |op|\r\n\t\t            table_matrix[zone_index+1][1] \u003c\u003c op.output(FRAGMENT).item.id.to_s #loads IDs into a matrix to be displayed to user\r\n\t\t            op.output(FRAGMENT).item.move (block_name + \", Zone \" + (zone_index+1).to_s)\r\n\t\t        end\r\n\t\t    end\r\n\t\t    table_matrix[1][1] = table_matrix[1][1].join(\", \")\r\n\t\t    table_matrix[2][1] = table_matrix[2][1].join(\", \")\r\n\t\t    show do\r\n\t\t        title \"Place PCR reactions into #{block_name}\"\r\n\t\t        note \"Place PCR reactions into #{block_name} according to the following table:\"\r\n\t\t        table table_matrix\r\n\t\t    end\r\n\t\t    \r\n\t\t    show do\r\n\t\t        title \"Set up PCR cycle for #{block_name}\"\r\n\t\t        bullet \"Select the circular \\\"Set Up Run\\\" button corresponding to #{block_name}\"\r\n\t\t        bullet \"Select \\\"Open Method\\\", then \\\"Q5 PCR\\\" (located in DAMP1 folder)\"\r\n\t\t        bullet \"Select the THIRD STEP in STAGE 2, and set its time to 0:0#{extension_time_minutes}:#{extension_time_seconds}\"\r\n\t\t        bullet \"Select \\\"Edit\\\", \\\"Manage Steps\\\", \\\"Advanced Options\\\", \\\"VeriFlex\\\"\"\r\n\t\t        bullet \"Select the small edit icon (pencil) corresponding to the SECOND STEP in STAGE 2\"\r\n\t\t        bullet \"Set Zone 1 temperature to #{zone_1_tanneal} and Zone 2 temperature to #{zone_2_tanneal}. Select \\\"Done\\\", \\\"Done\\\", \\\"Verify Block\\\", and \\\"Start Run\\\"\"\r\n\t\t    end\r\n\t\t    chosen_block_names.shift\r\n\t\tend\r\n\t\tstore_outputs_with_volumes output_volumes, current_taken_items, interactive: false\r\n\t\treturn {}\r\n\tend\r\nend","precondition":"def precondition(op)\n  true\nend","cost_model":"# Make PCR Fragment Cost Model\n\n# All related numbers come from 'Damp Lab Services_Dec2019'\n# materials are calculated on 'Damp Lab Services_Dec2019'\n# l stands for labor\n\ndef cost(op)\n    l = 21.59 * Parameter.get_float('labor rate (min)')\n    {labor: 0, materials: 1.72+l }\nend","documentation":"This is run using a plasmid/linear dsDNA stock or an overnight culture (for colony or genomic PCR) and two primer stocks and is a precursor to \u003cb\u003ePurify DNA from Reaction or Run On Agarose Gel\u003c/b\u003e. The technician runs a PCR reaction with the provided template and primers using an annealing temperature based on the primer sample definitions.\u003cbr\u003e\u003cbr\u003e\n\n\u003cb\u003ePrimer melting temperatures should be calculated using the NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\n\n------\u003cb\u003eInput Volume(s)\u003c/b\u003e------\u003cbr\u003e\nTemplate -\u003e 1 µl\u003cbr\u003e\nForward Primer -\u003e 1 µl\u003cbr\u003e\nReverse Primer -\u003e 1 µl\u003cbr\u003e\u003cbr\u003e\n\n------\u003cb\u003eOutput Volume(s)\u003c/b\u003e------\u003cbr\u003e\nPCR Product -\u003e 46 µl  ","test":"","timing":null}}]}