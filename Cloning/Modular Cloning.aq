{"config":{"title":"Modular Cloning","description":"No description given","copyright":"No copyright declared","version":"no version info","authors":[],"maintainer":{"name":"No maintainer","email":"noone@nowehere"},"acknowledgements":[],"github":{"repo":"none","user":"none","access_token":"none"},"keywords":[],"aquadoc_version":"1.0.0"},"components":[{"sample_types":[{"id":4,"name":"Fragment","description":"A linear double stranded piece of DNA from PCR or Restriction Digest","created_at":"2013-10-16T14:33:41.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00","field_types":[{"id":11,"parent_id":4,"name":"Sequence","ftype":"url","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2018-02-16T23:49:44.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":12,"parent_id":4,"name":"Length","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:17:39.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":13,"parent_id":4,"name":"Template","ftype":"sample","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-12T19:07:59.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":2,"field_type_id":13,"sample_type_id":2,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":2,"name":"Plasmid","description":"A circular piece of double stranded DNA","created_at":"2013-10-15T09:59:25.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00"}},{"id":3,"field_type_id":13,"sample_type_id":3,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":3,"name":"E. coli strain","description":"A strain of E. coli distinguished from others by genomic (not plasmid) modifications.","created_at":"2013-10-15T10:16:52.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00"}},{"id":4,"field_type_id":13,"sample_type_id":4,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":4,"name":"Fragment","description":"A linear double stranded piece of DNA from PCR or Restriction Digest","created_at":"2013-10-16T14:33:41.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00"}}],"sample_types":["Plasmid","E. coli strain","Fragment"],"object_types":[null,null,null]},{"id":14,"parent_id":4,"name":"Forward Primer","ftype":"sample","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-12T19:07:59.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":6,"field_type_id":14,"sample_type_id":1,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00"}}],"sample_types":["Primer"],"object_types":[null]},{"id":15,"parent_id":4,"name":"Reverse Primer","ftype":"sample","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-12T19:07:59.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":7,"field_type_id":15,"sample_type_id":1,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00"}}],"sample_types":["Primer"],"object_types":[null]},{"id":6036,"parent_id":4,"name":"Raw Sequence","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2018-02-16T23:48:20.000-08:00","updated_at":"2018-02-16T23:48:20.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]},{"id":2,"name":"Plasmid","description":"A circular piece of double stranded DNA","created_at":"2013-10-15T09:59:25.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00","field_types":[{"id":4,"parent_id":2,"name":"Sequence","ftype":"url","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:30:08.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":5,"parent_id":2,"name":"Sequence Verification","ftype":"url","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:16:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":6,"parent_id":2,"name":"Bacterial Marker 1","ftype":"string","choices":"Amp, Cam, Carb, Kan, Spec, Strep, Other, N/A","array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2020-03-05T14:47:09.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":7,"parent_id":2,"name":"Yeast Marker","ftype":"string","choices":"HIS, TRP, URA, LEU, NatMX, KanMX, HygMX, BleoMX ,5FOA, N/A, Other","array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2017-07-24T14:23:40.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":8,"parent_id":2,"name":"Length","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:16:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":42,"parent_id":2,"name":"Sequencing Primers","ftype":"sample","choices":null,"array":true,"required":false,"created_at":"2016-05-09T21:30:48.000-07:00","updated_at":"2016-05-09T21:30:48.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":26,"field_type_id":42,"sample_type_id":1,"object_type_id":null,"created_at":"2016-05-09T21:30:48.000-07:00","updated_at":"2016-05-09T21:30:48.000-07:00","sample_type":{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00"}}],"sample_types":["Primer"],"object_types":[null]},{"id":2246,"parent_id":2,"name":"Alias","ftype":"string","choices":"Promoter, CDS, Terminator, Backbone, RBS, Marker, Insulator, Reporter Plasmid, Gate, Circuit w/ Reporter Plasmid, Other, N/A","array":false,"required":false,"created_at":"2017-08-28T09:14:15.000-07:00","updated_at":"2020-03-05T14:51:23.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":10458,"parent_id":2,"name":"Bacterial Marker 2","ftype":"string","choices":"Amp, Cam, Carb, Kan, Spec, Strep, Other, N/A","array":false,"required":true,"created_at":"2020-03-05T14:47:09.000-08:00","updated_at":"2020-03-05T14:47:57.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]},{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00","field_types":[{"id":1,"parent_id":1,"name":"Overhang Sequence","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2,"parent_id":1,"name":"Anneal Sequence","ftype":"string","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":3,"parent_id":1,"name":"T Anneal","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2207,"parent_id":1,"name":"URL","ftype":"url","choices":null,"array":false,"required":false,"created_at":"2017-07-24T14:21:24.000-07:00","updated_at":"2017-07-24T14:21:24.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]},{"id":3,"name":"E. coli strain","description":"A strain of E. coli distinguished from others by genomic (not plasmid) modifications.","created_at":"2013-10-15T10:16:52.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00","field_types":[{"id":10,"parent_id":3,"name":"Parent","ftype":"sample","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":1,"field_type_id":10,"sample_type_id":3,"object_type_id":null,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T20:40:31.000-07:00","sample_type":{"id":3,"name":"E. coli strain","description":"A strain of E. coli distinguished from others by genomic (not plasmid) modifications.","created_at":"2013-10-15T10:16:52.000-07:00","updated_at":"2017-07-24T14:24:50.000-07:00"}}],"sample_types":["E. coli strain"],"object_types":[null]}]},{"id":6,"name":"Enzyme","description":"Enzymes in 1.5 mL tubes stored at -20C","created_at":"2013-12-31T10:23:07.000-08:00","updated_at":"2015-12-08T17:39:25.000-08:00","field_types":[{"id":2222,"parent_id":6,"name":"Vendor","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2017-08-10T11:14:33.000-07:00","updated_at":"2017-08-10T11:14:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2223,"parent_id":6,"name":"Vendor #","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2017-08-10T11:14:33.000-07:00","updated_at":"2017-08-10T11:14:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2226,"parent_id":6,"name":"Lot #","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2017-08-10T11:14:50.000-07:00","updated_at":"2017-08-10T11:14:50.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]}],"object_types":[{"id":295,"name":"Fragment Stock","description":"Fragment stock in 1.5 mL tube, usually stored in M20 fridge.","min":0,"max":1000,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"min_conc\": 0.000000005, \"rec_conc\": 0.000000025, \"max_vol\": 1500, \"conc_callback\": \"nanodrop_dsdna\", \"short_description\":\"1.5 mL tube\", \"opentrons_labware\": \"24-well-1.5ml-rack\"}","vendor":"No vendor information","created_at":"2014-01-12T16:12:01.000-08:00","updated_at":"2018-09-19T18:46:35.000-07:00","unit":"Fragment","cost":50.0,"release_method":"return","release_description":"","sample_type_id":4,"image":"","prefix":"M20P","rows":null,"columns":null,"sample_type_name":"Fragment"},{"id":571,"name":"Plasmid Stock","description":"A plasmid stock that has yet to be sequenced verified","min":0,"max":1,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"min_conc\": 0.000000005, \"rec_conc\": 0.000000025, \"max_vol\": 1500, \"conc_callback\": \"nanodrop_dsdna\", \"short_description\":\"1.5 mL tube\", \"opentrons_labware\": \"24-well-1.5ml-rack\"}","vendor":"No vendor information","created_at":"2017-03-31T15:34:41.000-07:00","updated_at":"2018-09-19T18:46:08.000-07:00","unit":"Plasmid","cost":0.01,"release_method":"return","release_description":"","sample_type_id":2,"image":"","prefix":"M20P","rows":null,"columns":null,"sample_type_name":"Plasmid"},{"id":290,"name":"PCR Result","description":"PCR results that contain the fragment we aim to amplify out.","min":0,"max":1000,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"max_vol\": 100, \"short_description\":\"PCR tube\"}","vendor":"No vendor information","created_at":"2014-01-10T02:39:29.000-08:00","updated_at":"2018-02-10T17:30:38.000-08:00","unit":"Fragment","cost":5.0,"release_method":"query","release_description":"Dispose if there is less than 5 ?L.","sample_type_id":4,"image":"","prefix":"M20SRX","rows":null,"columns":null,"sample_type_name":"Fragment"},{"id":620,"name":"MoClo Reaction Result","description":"The result of a Modular Cloning Reaction","min":0,"max":1000,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{ \"max_vol\": 100, \"short_description\":\"PCR tube\"}","vendor":"No vendor information","created_at":"2017-06-21T15:13:27.000-07:00","updated_at":"2018-02-10T17:30:09.000-08:00","unit":"Plasmid","cost":10.0,"release_method":"return","release_description":"","sample_type_id":2,"image":"","prefix":"M20SRX","rows":null,"columns":null,"sample_type_name":"Plasmid"},{"id":266,"name":"Enzyme Stock","description":"Enzyme stocks in their original containers from the vendor.","min":0,"max":1000,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"{\"max_vol\": 1500, \"short_description\":\"1.5 mL tube\", \"custom_wizards\":{\"M20SR\":1, \"M20EB\":9999}, \"opentrons_labware\": \"24-well-1.5ml-rack\"}","vendor":"No vendor information","created_at":"2013-12-31T10:26:15.000-08:00","updated_at":"2018-10-01T11:45:40.000-07:00","unit":"1 uL","cost":50.0,"release_method":"query","release_description":"Dispose only if empty, otherwise return.","sample_type_id":6,"image":"","prefix":"M20EB","rows":null,"columns":null,"sample_type_name":"Enzyme"}],"operation_type":{"name":"Modular Cloning","category":"Cloning","deployed":false,"on_the_fly":false,"field_types":[{"ftype":"sample","role":"input","name":"Insert","sample_types":["Fragment","Plasmid","Fragment"],"object_types":["Fragment Stock","Plasmid Stock","PCR Result"],"part":false,"array":true,"routing":"I","preferred_operation_type_id":null,"preferred_field_type_id":5604,"choices":null},{"ftype":"sample","role":"output","name":"MoClo Reaction Product","sample_types":["Plasmid"],"object_types":["MoClo Reaction Result"],"part":false,"array":false,"routing":"P","preferred_operation_type_id":null,"preferred_field_type_id":null,"choices":null},{"ftype":"sample","role":"input","name":"Vector","sample_types":["Plasmid","Fragment"],"object_types":["Plasmid Stock","Fragment Stock"],"part":false,"array":false,"routing":"V","preferred_operation_type_id":483,"preferred_field_type_id":5604,"choices":null},{"ftype":"sample","role":"input","name":"MoClo Restriction Enzyme","sample_types":["Enzyme"],"object_types":["Enzyme Stock"],"part":false,"array":false,"routing":"E","preferred_operation_type_id":null,"preferred_field_type_id":null,"choices":null}],"protocol":"needs \"Cloning Libs/Cloning\"\r\nneeds \"Standard Libs/Debug Lib\"\r\nneeds \"Cloning Libs/OpenTronsAq\"\r\n\r\n# DESIGNED FOR BATCHES OF 1 T0 32 OPERATIONS\r\nclass Protocol\r\n  include Debug\r\n  include Cloning\r\n  include OpenTronsAq\r\n\r\n  REACTION_VOLUME = 20.0\r\n    \r\n  TOTAL_THERMOCYCLERS = 1\r\n\r\n  BLOCKS_PER_THERMOCYCLER = 3\r\n  ZONES_PER_BLOCK = 2\r\n  REACTIONS_PER_ZONE = 16\r\n\r\n  def main\r\n    current_taken_items = []\r\n    input_volumes = {\"Insert\" =\u003e (REACTION_VOLUME / 10.0).round(2), \"Vector\" =\u003e (REACTION_VOLUME / 10.0).round(2), \"Ligase\" =\u003e (REACTION_VOLUME / 40.0).round(2), \"MoClo Restriction Enzyme\" =\u003e (REACTION_VOLUME / 20.0), \"Buffer\" =\u003e (REACTION_VOLUME / 10.0).round(2)}\r\n    output_volumes = {\"MoClo Reaction Product\" =\u003e (REACTION_VOLUME*0.95 - 2.0).round}\r\n    \r\n    data = show do\r\n\t    title \"Check if at least one thermocycler block is available\"\r\n\t    warning \"Warning: Selecting \\\"No\\\" will abort the protocol.\"\r\n\t    select [ \"Yes\", \"No\"], var: \"choice\", label: \"Is there at least 1 thermocycler block currently available?\", default: 0\r\n\tend\r\n\r\n\tif data[:choice] == \"No\"\r\n\t    show do\r\n            title \"Number of reactions scheduled exceeds available capacity.\"\r\n            note \"Number of reactions scheduled exceeds available capacity.\"\r\n\t        warning \"Aborting protocol. Please check with the lab manager for further instructions.\"\r\n        end\r\n\t    return {}\r\n\tend\r\n    \r\n    show do\r\n        title \"Keep all items on ice\"\r\n        warning \"Note: All items used in this protocol should be kept on ice (or thawed at room temperature then immediately transfered to ice).\"\r\n    end\r\n    \r\n    operations.add_static_inputs \"Buffer\", \"T4 DNA Ligase Buffer\", \"Enzyme Buffer Stock\"\r\n    operations.add_static_inputs \"Ligase\", \"T4 HC DNA Ligase\", \"Enzyme Stock\"\r\n    check_user_inputs [\"Insert\", \"Vector\"], input_volumes, current_taken_items\r\n    assign_input_items [\"Ligase\", \"MoClo Restriction Enzyme\"], input_volumes, current_taken_items\r\n    return {} if check_for_errors\r\n    operations.sort_by! {|op| [op.input(\"Vector\").item.id, op.input_array(\"Insert\").items[0].id]}\r\n    \r\n    operations.running.each do |op|\r\n        water_to_add = (REACTION_VOLUME - input_volumes[\"Insert\"]*op.input_array(\"Insert\").items.count - input_volumes[\"Vector\"] - input_volumes[\"Ligase\"] - input_volumes[\"MoClo Restriction Enzyme\"] - input_volumes[\"Buffer\"]).round(2)\r\n        if water_to_add \u003e 0.000001\r\n            op.temporary[:water_to_add] = water_to_add\r\n        else\r\n            op.error :volume_error, \"Water to add evaluated to negative value, possibly due to too many inputs.\"\r\n        end\r\n    end\r\n    \r\n    robust_make [\"MoClo Reaction Product\"], current_taken_items\r\n    \r\n    robust_take_inputs [\"Insert\", \"Vector\", \"Buffer\"], current_taken_items, interactive: true\r\n    \r\n    ot2_choice = show do\r\n        title \"Select execution method\"\r\n        select [\"Yes\", \"No\"], var: \"ot2\", label: \"Is the OT2 robot available?\"\r\n    end\r\n    \r\n    if ot2_choice[:ot2] == \"Yes\"\r\n        \r\n        prot = OTAqProtocol.new\r\n        \r\n        prot.add_labware_definition('24-well-1.5ml-rack')\r\n\r\n        water_container = prot.labware.load('point', '1', 'Water')\r\n        water = prot.dummy_item \"DI Water\"\r\n        prot.assign_wells [water], [water_container.wells(0)]\r\n        \r\n        td = prot.modules.load('tempdeck', '10')\r\n        temp_deck_tubes = prot.labware.load('PCR-strip-tall', '10', 'Temp deck w/ PCR tubes')\r\n        \r\n        # p10 = prot.instruments.P10_Single(mount: 'right', tip_model: \"tiprack-10ul\")\r\n        tip_racks = []\r\n        tip_racks \u003c\u003c prot.labware.load('tiprack-10ul', '3')\r\n        tip_racks \u003c\u003c prot.labware.load('tiprack-10ul', '6')\r\n        p10 = prot.instruments.P10_Single(mount: 'right', tip_racks: tip_racks)\r\n        \r\n        # convenience function from Aq objects that lets you create labware\r\n        prot.assign_wells operations.running.map{|op| op.output(\"MoClo Reaction Product\").item}, temp_deck_tubes.wells[0..operations.running.count-1]\r\n        \r\n        prot.assign_wells operations.running.map{|op| op.input(\"MoClo Restriction Enzyme\").item}.uniq\r\n        prot.assign_wells operations.running.map{|op| op.input(\"Ligase\").item}.uniq\r\n        prot.assign_wells operations.running.map{|op| op.input(\"Buffer\").item}.uniq\r\n        prot.assign_wells operations.running.map{|op| op.input_array(\"Insert\").items}.flatten.uniq\r\n        prot.assign_wells operations.running.map{|op| op.input(\"Vector\").item}.uniq\r\n        \r\n        td.set_temperature(37)\r\n        \r\n        p10.pick_up_tip\r\n        operations.running.each do |op|\r\n            while op.temporary[:water_to_add] \u003e 10\r\n                p10.aspirate(10, prot.find_well(water))\r\n                p10.dispense(10, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                op.temporary[:water_to_add] -= 10\r\n            end\r\n            p10.aspirate(op.temporary[:water_to_add], prot.find_well(water))\r\n            p10.dispense(op.temporary[:water_to_add], prot.find_well(op.output(\"MoClo Reaction Product\").item))\r\n        end\r\n        p10.drop_tip\r\n        \r\n        p10.pick_up_tip\r\n        operations.running.each do |op|\r\n            p10.aspirate(input_volumes[\"Buffer\"], prot.find_well(op.input(\"Buffer\").item).bottom(0))\r\n            p10.dispense(input_volumes[\"Buffer\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            p10.aspirate(input_volumes[\"Buffer\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            p10.dispense(input_volumes[\"Buffer\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n        end\r\n        p10.drop_tip\r\n        \r\n        # Add other reagents\r\n        operations.running.each do |op|\r\n            p10.pick_up_tip\r\n            p10.aspirate(input_volumes[\"Vector\"], prot.find_well(op.input(\"Vector\").item).bottom(0))\r\n            p10.dispense(input_volumes[\"Vector\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            p10.drop_tip\r\n            \r\n            op.input_array(\"Insert\").items.each do |insert_item|\r\n                p10.pick_up_tip\r\n                p10.aspirate(input_volumes[\"Insert\"], prot.find_well(insert_item).bottom(0))\r\n                p10.dispense(input_volumes[\"Insert\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                p10.drop_tip\r\n            end\r\n            \r\n            p10.pick_up_tip\r\n            p10.aspirate(input_volumes[\"Ligase\"], prot.find_well(op.input(\"Ligase\").item).bottom(0))\r\n            p10.dispense(input_volumes[\"Ligase\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            # Small mix to ensure ligase is added.\r\n            p10.aspirate(5, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            p10.dispense(5, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            p10.drop_tip\r\n            \r\n            p10.pick_up_tip\r\n            p10.aspirate(input_volumes[\"MoClo Restriction Enzyme\"], prot.find_well(op.input(\"MoClo Restriction Enzyme\").item).bottom(0))\r\n            p10.dispense(input_volumes[\"MoClo Restriction Enzyme\"], prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            # Final mix\r\n            3.times do\r\n                p10.aspirate(10, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n                p10.dispense(10, prot.find_well(op.output(\"MoClo Reaction Product\").item).bottom(0))\r\n            end\r\n            p10.drop_tip\r\n        end\r\n        \r\n        td.wait_for_temp\r\n        p10.delay(7200)\r\n        \r\n        td.set_temperature(50)\r\n        p10.delay(400)\r\n        \r\n        td.set_temperature(80)\r\n        p10.delay(600)\r\n        \r\n        td.set_temperature(4)\r\n        \r\n        robust_take_inputs [\"Ligase\", \"MoClo Restriction Enzyme\", \"Vector\", \"Insert\", \"Buffer\"], current_taken_items, interactive: true\r\n        \r\n        show do\r\n            title \"Prepare output PCR tubes.\"\r\n            note \"Get out #{operations.running.count} new PCR tubes and label with the following IDs: #{operations.running.map {|op| op.output(\"MoClo Reaction Product\").item.id}.to_sentence}\"\r\n        end\r\n        \r\n        run_protocol prot\r\n        \r\n        show do\r\n           title \"Set timer for removing inputs\"\r\n           check \"Set a timer for 20 min, after which the robot should be done pipetting and you can remove and store input items (see following slide).\"\r\n           timer initial: { hours: 0, minutes: 20, seconds: 0}\r\n           check \"Do NOT remove the output items (small PCR tubes on temperature block).\"\r\n        end\r\n        \r\n        robust_release_inputs [\"Ligase\", \"MoClo Restriction Enzyme\", \"Vector\", \"Insert\", \"Buffer\"], current_taken_items, interactive: true\r\n        \r\n        show do\r\n            title \"Set timer for storing outputs\"\r\n            check \"Set a timer for 2 hrs, after which the reactions should be done incubating. At this point, you must reset the run to innactivate the temp block, and then store the output items (see following slides).\"\r\n           timer initial: { hours: 2, minutes: 0, seconds: 0}\r\n        end\r\n        \r\n    else\r\n        \r\n        show do\r\n            title \"Add reagents to reaction tubes\"\r\n            note \"Get out #{operations.running.count} new PCR tubes. Label and add reagents to tubes according to the following table:\"\r\n            table operations.start_table\r\n            .output_item(\"MoClo Reaction Product\")\r\n            .custom_column(heading: \"Buffer to add\", checkable: true) { |op| \"#{input_volumes[\"Buffer\"]} µl of #{op.input(\"Buffer\").item.id} (#{op.input(\"Buffer\").sample.name})\"}\r\n            .custom_column(heading: \"Water to add\", checkable: true) { |op| \"#{op.temporary[:water_to_add]} µl of water\"}\r\n            .custom_column(heading: \"Vector to add\", checkable: true) { |op| \"#{input_volumes[\"Vector\"]} µl of #{op.input(\"Vector\").item.id}\"}\r\n            .custom_column(heading: \"Inserts to add\", checkable: true) { |op| op.input_array(\"Insert\").items.each_with_index.map {|insert, i| \"#{input_volumes[\"Insert\"]} µl of #{insert.id}\"}.join(\", \")}\r\n            .end_table\r\n        end\r\n        \r\n        robust_release_inputs [\"Insert\", \"Vector\", \"Buffer\"], current_taken_items, interactive: true\r\n        \r\n        robust_take_inputs [\"Ligase\", \"MoClo Restriction Enzyme\"], current_taken_items, interactive: true\r\n        \r\n        show do\r\n            title \"Add #{operations.running[0].input(\"Ligase\").sample.name} and MoClo enzymes to reaction tubes\"\r\n            note \"Add #{operations.running[0].input(\"Ligase\").sample.name} and MoClo enzymes to reaction tubes according to the following table:\"\r\n            table operations.start_table\r\n            .output_item(\"MoClo Reaction Product\")\r\n            .custom_column(heading: \"Ligase\", checkable: true) { |op| \"#{input_volumes[\"Ligase\"]} µl of #{op.input(\"Ligase\").item.id} (#{op.input(\"Ligase\").sample.name})\"}\r\n            .custom_column(heading: \"MoClo Restriction Enzyme\", checkable: true) { |op| \"#{input_volumes[\"MoClo Restriction Enzyme\"]} µl of #{op.input(\"MoClo Restriction Enzyme\").item.id} (#{op.input(\"MoClo Restriction Enzyme\").sample.name})\"}\r\n            .end_table\r\n        end\r\n        \r\n        robust_release_inputs [\"Ligase\", \"MoClo Restriction Enzyme\"], current_taken_items, interactive: true\r\n    \r\n        all_block_names = []\r\n    \tTOTAL_THERMOCYCLERS.times do |tc_number|\r\n    \t    BLOCKS_PER_THERMOCYCLER.times do |block_number|\r\n    \t        all_block_names \u003c\u003c \"Thermocycler \" + (tc_number+1).to_s + \", Block \" + (block_number+1).to_s\r\n    \t    end\r\n    \tend\r\n        \r\n        data = show {\r\n            title \"Select block of thermocycler\"\r\n            note \"Please select the thermocycler block you would like to use.\"\r\n            select all_block_names, var: \"choice\", label: \"Block(s) #\", default: 0\r\n            }\r\n        block_name = data[:choice]\r\n        \r\n        table_matrix = Array.new {Array.new}\r\n    \ttable_matrix[0] = [\"Zone in #{block_name}\", \"MoClo Reaction Product Item IDs\" ]\r\n    \ttable_matrix[1] = [\"Zone 1\", []]\r\n    \ttable_matrix[2] = [\"Zone 2\", []]\r\n    \toperations.running.each_with_index do |op, i|\r\n    \t    if i \u003c 16\r\n    \t        table_matrix[1][1] \u003c\u003c op.output(\"MoClo Reaction Product\").item.id.to_s\r\n    \t        op.output(\"MoClo Reaction Product\").item.move (block_name + \", Zone 1\")\r\n    \t    else\r\n    \t        table_matrix[2][1] \u003c\u003c op.output(\"MoClo Reaction Product\").item.id.to_s\r\n    \t        op.output(\"MoClo Reaction Product\").item.move (block_name + \", Zone 2\")\r\n    \t    end\r\n    \tend\r\n        table_matrix[1][1] = table_matrix[1][1].join(\", \")\r\n        table_matrix[2][1] = table_matrix[2][1].join(\", \")\r\n        \r\n        show do\r\n            title \"Place MoClo reactions into #{block_name}\"\r\n            note \"Place MoClo reactions into #{block_name} according to the following table:\"\r\n            table table_matrix\r\n        end\r\n\r\n        show do\r\n            title \"Set up PCR cycle for #{block_name}\"\r\n            bullet \"Select the circular \\\"Set Up Run\\\" button corresponding to #{block_name}\"\r\n            bullet \"Select \\\"Open Method\\\", then \\\"MOCLO STANDARD\\\" (located in DAMP 1 folder)\"\r\n            bullet \"Select \\\"Verify Block\\\", and \\\"Start Run\\\"\"\r\n        end\r\n    end\r\n    \r\n    store_outputs_with_volumes output_volumes, current_taken_items, interactive: true\r\n    return {}\r\n    \r\n  end\r\n\r\nend","precondition":"def precondition(op)\n  true\nend","cost_model":"# All related numbers come from 'Damp Lab Services_Dec2019'\r\n# materials are calculated on 'Damp Lab Services_Dec2019'\r\n# l stands for labor\r\n\r\ndef cost(op)\r\n    l = 7.82 * Parameter.get_float('labor rate (min)')\r\n    {labor: 0, materials: 2.93+l }\r\nend\r\n","documentation":"This is run using plasmid stock or linear dsDNA stock items and is a precursor to \u003cb\u003eTransformation\u003c/b\u003e. The technician will perform a modular cloning (MoClo) reaction using the specified vector and inserts using T4 DNA Ligase and the specified MoClo restriction enzyme. Up to 7 inserts (plus 1 vector) can be assembled at once using this protocol.\u003cbr\u003e\u003cbr\u003e\n\n------\u003cb\u003eInput Volume(s)\u003c/b\u003e------\u003cbr\u003e\nVector -\u003e 2 µl\u003cbr\u003e\nInsert -\u003e 2 µl\u003cbr\u003e\u003cbr\u003e\n\n------\u003cb\u003eOutput Volume(s)\u003c/b\u003e------\u003cbr\u003e\nMoClo Reaction Product -\u003e 17 µl  ","test":"","timing":null}}]}