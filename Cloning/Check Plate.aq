{"config":{"title":"Check Plate","description":"No description given","copyright":"No copyright declared","version":"no version info","authors":[],"maintainer":{"name":"No maintainer","email":"noone@nowehere"},"acknowledgements":[],"github":{"repo":"none","user":"none","access_token":"none"},"keywords":[],"aquadoc_version":"1.0.0"},"components":[{"sample_types":[{"id":2,"name":"Plasmid","description":"A circular piece of double stranded DNA","created_at":"2013-10-15T09:59:25.000-07:00","updated_at":"2015-11-29T07:55:20.000-08:00","field_types":[{"id":4,"parent_id":2,"name":"Sequence","ftype":"url","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:30:08.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":5,"parent_id":2,"name":"Sequence Verification","ftype":"url","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:16:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":6,"parent_id":2,"name":"Bacterial Marker 1","ftype":"string","choices":"Amp, Cam, Carb, Kan, Spec, Strep, Other, N/A","array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2020-03-05T14:47:09.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":7,"parent_id":2,"name":"Yeast Marker","ftype":"string","choices":"HIS, TRP, URA, LEU, NatMX, KanMX, HygMX, BleoMX ,5FOA, N/A, Other","array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2017-07-24T14:23:40.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":8,"parent_id":2,"name":"Length","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:16:33.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":42,"parent_id":2,"name":"Sequencing Primers","ftype":"sample","choices":null,"array":true,"required":false,"created_at":"2016-05-09T21:30:48.000-07:00","updated_at":"2016-05-09T21:30:48.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[{"id":26,"field_type_id":42,"sample_type_id":1,"object_type_id":null,"created_at":"2016-05-09T21:30:48.000-07:00","updated_at":"2016-05-09T21:30:48.000-07:00","sample_type":{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00"}}],"sample_types":["Primer"],"object_types":[null]},{"id":2246,"parent_id":2,"name":"Alias","ftype":"string","choices":"Promoter, CDS, Terminator, Backbone, RBS, Marker, Insulator, Reporter Plasmid, Gate, Circuit w/ Reporter Plasmid, Other, N/A","array":false,"required":false,"created_at":"2017-08-28T09:14:15.000-07:00","updated_at":"2020-03-05T14:51:23.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":10458,"parent_id":2,"name":"Bacterial Marker 2","ftype":"string","choices":"Amp, Cam, Carb, Kan, Spec, Strep, Other, N/A","array":false,"required":true,"created_at":"2020-03-05T14:47:09.000-08:00","updated_at":"2020-03-05T14:47:57.000-08:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]},{"id":1,"name":"Primer","description":"The primer stock solutions are diluted to 25 uM. Primer melting temperatures should be calculated using the **NEB Tm calculator http://tmcalculator.neb.com/#!/main configured for Phusion High-Fidelity DNA Polymerase (HF Buffer)** for standard PCR reaction","created_at":"2013-10-08T10:18:01.000-07:00","updated_at":"2018-02-25T04:40:37.000-08:00","field_types":[{"id":1,"parent_id":1,"name":"Overhang Sequence","ftype":"string","choices":null,"array":false,"required":false,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2,"parent_id":1,"name":"Anneal Sequence","ftype":"string","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":3,"parent_id":1,"name":"T Anneal","ftype":"number","choices":null,"array":false,"required":true,"created_at":"2016-05-09T20:40:31.000-07:00","updated_at":"2016-05-09T21:25:11.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]},{"id":2207,"parent_id":1,"name":"URL","ftype":"url","choices":null,"array":false,"required":false,"created_at":"2017-07-24T14:21:24.000-07:00","updated_at":"2017-07-24T14:21:24.000-07:00","parent_class":"SampleType","role":null,"part":null,"routing":null,"preferred_operation_type_id":null,"preferred_field_type_id":null,"allowable_field_types":[],"sample_types":[],"object_types":[]}]}],"object_types":[{"id":365,"name":"E coli Plate of Plasmid","description":"A plate containing E. coli transformed with a plasmid","min":0,"max":1,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"No data","vendor":"No vendor information","created_at":"2014-02-25T17:05:34.000-08:00","updated_at":"2018-02-27T18:08:38.000-08:00","unit":"Plasmid","cost":0.01,"release_method":"return","release_description":"","sample_type_id":2,"image":"","prefix":"37C incubator","rows":null,"columns":null,"sample_type_name":"Plasmid"},{"id":549,"name":"Checked E coli Plate of Plasmid","description":"It's a checked plate","min":0,"max":1,"handler":"sample_container","safety":"No safety information","cleanup":"No cleanup information","data":"No data","vendor":"No vendor information","created_at":"2017-03-15T13:13:02.000-07:00","updated_at":"2018-02-27T18:36:21.000-08:00","unit":"plate","cost":0.01,"release_method":"return","release_description":"","sample_type_id":2,"image":"","prefix":"M4AP","rows":null,"columns":null,"sample_type_name":"Plasmid"}],"operation_type":{"name":"Check Plate","category":"Cloning","deployed":false,"on_the_fly":false,"field_types":[{"ftype":"sample","role":"input","name":"Plate","sample_types":["Plasmid"],"object_types":["E coli Plate of Plasmid"],"part":false,"array":false,"routing":"P","preferred_operation_type_id":487,"preferred_field_type_id":5613,"choices":null},{"ftype":"sample","role":"output","name":"Plate","sample_types":["Plasmid"],"object_types":["Checked E coli Plate of Plasmid"],"part":false,"array":false,"routing":"P","preferred_operation_type_id":null,"preferred_field_type_id":null,"choices":null}],"protocol":"needs \"Standard Libs/Debug Lib\"\nneeds \"Cloning Libs/Cloning\"\n\n# TO DO:\n    # Create option for \"there are baby colonies but they're not big enough for protocols\" case--put back in incubator\n    # Re-streak the plate if there's too much contamination--fire check plate again in 24 hrs, probably collection\n\nclass Protocol\n  include Debug\n  include Cloning\n  \n  def main\n    operations.sort_by! {|op| op.input(\"Plate\").item.id}\n    # Take plates\n    operations.retrieve\n    \n    # Count the number of colonies\n    info = get_colony_numbers\n    \n    # Update plate data\n    update_item_data info\n    \n    # Delete and discard any plates that have 0 colonies\n    discard_bad_plates if operations.any? { |op| op.temporary[:delete] }\n    \n    return {} if check_for_errors\n    \n    # Parafilm and label plates\n    parafilm_and_store\n    \n    return {}\n  end\n  \n  \n  \n  # Count the number of colonies and select whether the growth is normal, contaminated, or a lawn\n  def get_colony_numbers\n    show do\n      title \"Estimate colony numbers\"\n      \n      operations.each do |op|\n        plate = op.input(\"Plate\").item\n        get \"number\", var: \"n_white#{plate.id}\", label: \"Estimate how many white colonies are on #{plate}\", default: 0\n        get \"number\", var: \"n_blue#{plate.id}\", label: \"Estimate how many blue colonies are on #{plate}\", default: 0\n        get \"number\", var: \"n_red#{plate.id}\", label: \"Estimate how many red colonies are on #{plate}\", default: 0\n        select [\"normal\", \"contamination\", \"lawn\"], var: \"s#{plate.id}\", label: \"Choose whether there is contamination, a lawn, or whether it's normal.\", default: 0\n      end\n    end    \n  end\n  \n  # Alter data of the virtual item to represent its actual state\n  def update_item_data info\n    operations.each do |op|\n      plate = op.input(\"Plate\").item\n      log_info \"\", info[\"n_white#{plate.id}\".to_sym]\n      log_info \"\", info[\"n_red#{plate.id}\".to_sym]\n      log_info \"\", info[\"n_blue#{plate.id}\".to_sym]\n      if (info[\"s#{plate.id}\".to_sym] == \"normal\") \u0026\u0026 (info[\"n_white#{plate.id}\".to_sym] == 0) \u0026\u0026 (info[\"n_blue#{plate.id}\".to_sym] == 0) \u0026\u0026 (info[\"n_red#{plate.id}\".to_sym] == 0)\n        plate.mark_as_deleted\n        plate.save\n        op.temporary[:delete] = true\n        op.error :no_colonies, \"There are no colonies for plate #{plate.id}\"\n      else\n        plate.associate :white_colonies, info[\"n_white#{plate.id}\".to_sym]\n        plate.associate :blue_colonies, info[\"n_blue#{plate.id}\".to_sym] if !(info[\"n_blue#{plate.id}\".to_sym] == 0)\n        plate.associate :red_colonies, info[\"n_red#{plate.id}\".to_sym] if !(info[\"n_red#{plate.id}\".to_sym] == 0)\n        plate.associate :status, info[\"s#{plate.id}\".to_sym]\n        checked_ot = ObjectType.find_by_name(\"Checked E coli Plate of Plasmid\")\n        plate.object_type_id = checked_ot.id\n        plate.object_type = checked_ot\n        plate.save\n        op.pass(\"Plate\",\"Plate\")\n      end\n    end\n  end\n  \n  # discard any plates that have 0 colonies\n  def discard_bad_plates\n      show do \n        title \"Discard Plates\"\n        discard_plate_ids = operations.select { |op| op.temporary[:delete] }.map { |op| op.input(\"Plate\").item.id }\n        note \"Discard the following plates with 0 colonies: #{discard_plate_ids.to_sentence}\"\n    end\n  end\n  \n  \n  # Parafilm and label any plates that have suitable growth\n  def parafilm_and_store\n    plates_to_parafilm = operations.reject{|op| op.temporary[:delete] }.map{|op| op.input(\"Plate\").item}\n    show do \n      title \"Label and Parafilm\"\n      check \"Confirm that plates #{plates_to_parafilm.map{ |i| i.id }.to_sentence} are labelled with their item ID numbers on the side (outside edge of plate) and the bottom of the plate.\"\n      check \"Confirm that plates are labelled with the proper storage location on the side (outside edge of plate) and the bottom of the plate, and parafilm each one.\"\n      warning \"The location will appear on the next page.\"\n    end\n    \n    #Put plates back under control of wizard (were in incubator)\n    plates_to_parafilm.each do |i|\n        wiz = Wizard.find_by_name(i.object_type.prefix)\n        i.move wiz.int_to_location(wiz.next.number)\n        wiz.save\n        i.save\n    end \n\n    release plates_to_parafilm, interactive: true\n  end\nend\n","precondition":"def precondition(op)\n  true\nend","cost_model":"# Check Plate/Imaging Cost Model\n\n# All related numbers come from 'Damp Lab Services_Dec2019'\n# materials are calculated on 'Damp Lab Services_Dec2019'\n# l stands for labor\n\ndef cost(op)\n    l = 18.63 * Parameter.get_float('labor rate (min)')\n    {labor: 0, materials: 0.04+l }\nend","documentation":"This is run the day after \u003cb\u003eE. coli Transformation\u003c/b\u003e and is a precursor to \u003cb\u003eMake Overnight Inoculum\u003c/b\u003e. The plates are pulled from the 37 C incubator and checked for growth and contamination. If there is no growth, the plate is thrown out and the user is notified. Plates with growth are stored at 4 C.","test":"","timing":null}}]}